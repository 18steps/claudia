usage: claudia [command] {OPTIONS}

    Deploy a Node.JS project to AWS as a lambda microservice, optionally updating APIs/event hooks.

COMMANDS are:

    create        Create the initial lambda function and related security role.
      --name          lambda function name (eg awesome-microservice)
      --region        AWS region where to create the lambda (eg us-east-1)
      --version       [Optional] A version alias to automatically assign to the new function (eg. development)
      --handler       [Optional] Main function for Lambda to execute, as module.function 
                          (Eg if it's in the main.js file and exported as router, this would be main.router)
      --api-module    [Optional] The main module to use when creating Web APIs. If you provide this
                          parameter, the --handler option is ignored. This should be a module created using
                          the Claudia API Builder.
      --source        [Optional] Directory with project files (optional. Defaults to current directory.
      --config        [Optional] Config file where the result will be saved. Defaults to claudia.json
      --policies      [Optional] A directory or file pattern for additional IAM policies to automatically include
      --role          [Optional] The name of an existing role to assign to the function.
                          If not supplied, Claudia will create a new role

    update        Create a new version of the Lambda function using project files. 
      --version      [Optional] A version alias to automatically assign to the new version (eg. development)
      --source       [Optional] Directory with project files. Defaults to current directory.
      --config       [Optional] Config file containing the resource names. Defaults to claudia.json

    test-lambda   Execute the lambda function configured in claudia.json and print out the response. 
      --event        [Optional] Path to a file containing the JSON test event 
      --source       [Optional] Directory with project files. Defaults to current directory.
      --config       [Optional] Config file containing the resource names. Defaults to claudia.json

    add-s3-event-source Add a notification event to Lambda when a file is added to a S3 bucket
      --bucket       Bucket name
      --prefix       [Optional] Prefix filter for S3 keys that will cause the event
      --version      [Optional] Bind to a particular version (eg testing or production)
      --source       [Optional] Directory with project files. Defaults to current directory. 
      --config       [Optional] Config file containing the resource names. Defaults to claudia.json

    add-sns-event-source Add a notification event to Lambda when a message is published on a SNS topic
      --topic        the ARN of the SNS topic
      --version      Alias for the version name (eg. dev or production)
      --source       [Optional] Directory with project files. Defaults to current directory.
      --config       [Optional] Config file containing the resource names. Defaults to claudia.json

    add-scheduled-event Add a recurring notification event
      --event        Path to a JSON event file that will be sent to lambda periodically
      --name         Name of the scheduled event rule
      --schedule     A schedule expression, for example "rate(5 minutes)". For syntax options, see
                       http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/ScheduledEvents.html
      --rate         [Optional] a shorthand for rate-based expressions, without the brackets (eg "5 minutes"). 
                       If this is specified, the --schedule argument is ignored
      --cron         [Optional] a shorthand for cron-based expressions, without the brackets (eg "0 8 1 * ? *").
                       If this is specified, the --schedule argument is ignored
      --version      [Optional] Bind to a particular version (eg testing or production)
      --source       [Optional] Directory with project files. Defaults to current directory.
      --config       [Optional] Config file containing the resource names. Defaults to claudia.json

    set-version      Create or update lambda version alias to point to the current version of code
      --version      Alias for the version name (eg. dev or production)
      --source       [Optional] Directory with project files. Defaults to current directory. 
      --config       [Optional] Config file containing the resource names. Defaults to claudia.json

